{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","redux/types.js","components/BudgetForm.js","redux/actions.js","components/ExpenseForm.js","redux/selectors.js","components/Expense.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","redux/reducer.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","types","ADD_EXPENSE","REMOVE_EXPENSE","SAVE_BUDGET","BudgetForm","state","budget","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","payload","actions","ExpenseForm","amount","expense","id","shortid","generate","Number","getExpenses","expenses","getBudget","getTotalExpenses","createSelector","reduce","total","getBalance","Expense","onRemove","ownProps","find","selectors","Table","table","map","key","Container","div","isPositive","p","Amount","Value","section","balance","App","combineReducers","filter","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"+lBAGA,IAAMA,EAAaC,IAAOC,KAAV,KAcDC,EAJF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACL,EAAD,CAAYI,SAAUA,GAAWC,I,mKCXnC,IAAMC,EAAcL,IAAOM,MAAV,KAKb,SAAAC,GAAK,OAAIA,EAAMC,gBAOJC,EAJD,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUI,EAAb,EAAaA,aAAb,OACZ,kBAACH,EAAD,CAAaG,aAAcA,GAAeJ,I,4RCT5C,IAAMM,EAAcV,IAAOW,MAAV,KAsBFC,EAPD,SAAC,GAAD,QACZC,YADY,MACL,QADK,MAEZC,aAFY,MAEJ,GAFI,MAGZC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACN,EAAD,CAAaG,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,K,yjBCpBvE,IAAMC,EAAejB,IAAOkB,OAAV,KA8BHC,EANA,SAAC,GAAD,QAAGN,YAAH,MAAU,SAAV,MAAoBP,aAApB,MAA4B,GAA5B,MAAgCc,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAACH,EAAD,CAAcJ,KAAMA,EAAMO,QAASA,GAChCd,ICvBUe,EAND,CACZC,YAAa,cACbC,eAAgB,iBAChBC,YAAa,e,wBCUTC,E,2MACJC,MAAQ,CACNC,OAAQ,G,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZH,OAAQE,EAAEE,OAAOjB,S,EAIrBkB,aAAe,SAAAH,GACbA,EAAEI,iBACF,EAAK1B,MAAM2B,OAAO,EAAKR,MAAMC,QAC7B,EAAKG,SAAS,CAAEH,OAAQ,K,wEAIxB,OACE,kBAAC,EAAD,CAAMxB,SAAUgC,KAAKH,cACnB,kBAAC,EAAD,CAAOxB,aAxBE,gCAwBT,0BAEE,kBAAC,EAAD,CACEK,KAAK,SACLC,MAAOqB,KAAKT,MAAMC,OAClBZ,SAAUoB,KAAKP,gBAInB,kBAAC,EAAD,CAAQtB,MAAM,OAAOO,KAAK,gB,GA7BTuB,aAyCVC,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLJ,OAAQ,SAAApB,GAAK,OAAIwB,ECzBK,SAAAxB,GACxB,MAAO,CACLD,KAAMQ,EAAMG,YACZe,QAAS,CAAEzB,OAAQA,IDsBO0B,CAAmB1B,QAIlCuB,CAAkCZ,G,gBEzC3CgB,E,2MACJf,MAAQ,CACNV,KAAM,GACN0B,OAAQ,G,EAGVd,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOf,KAAOa,EAAEE,OAAOjB,S,EAI9BkB,aAAe,SAAAH,GACbA,EAAEI,iBAEF,EAAK1B,MAAM2B,OAAX,eAAuB,EAAKR,QAC5B,EAAKI,SAAS,CAAEd,KAAM,GAAI0B,OAAQ,K,wEAIlC,OACE,kBAAC,EAAD,CAAMvC,SAAUgC,KAAKH,cACnB,kBAAC,EAAD,CAAOxB,aA1BE,gCA0BT,qBAEE,kBAAC,EAAD,CACEK,KAAK,OACLG,KAAK,OACLF,MAAOqB,KAAKT,MAAMV,KAClBD,SAAUoB,KAAKP,gBAGnB,kBAAC,EAAD,CAAOpB,aAnCE,gCAmCT,uBAEE,kBAAC,EAAD,CACEK,KAAK,SACLG,KAAK,SACLF,MAAOqB,KAAKT,MAAMgB,OAClB3B,SAAUoB,KAAKP,gBAInB,kBAAC,EAAD,CAAQtB,MAAM,MAAMO,KAAK,gB,GAzCPuB,aAqDXC,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLJ,OAAQ,gBAAGlB,EAAH,EAAGA,KAAM0B,EAAT,EAASA,OAAT,OAAsBJ,ED3Df,SAAC,GAAsB,IAApBtB,EAAmB,EAAnBA,KAAM0B,EAAa,EAAbA,OAC1B,MAAO,CACL7B,KAAMQ,EAAMC,YACZiB,QAAS,CACPI,QAAS,CACPC,GAAIC,IAAQC,WACZ9B,OACA0B,OAAQK,OAAOL,MCoDoBF,CAAY,CAAExB,OAAM0B,gBAIhDL,CAAkCI,G,QChEpCO,EAAc,SAAAtB,GAAK,OAAIA,EAAMuB,UAE7BC,EAAY,SAAAxB,GAAK,OAAIA,EAAMC,QAE3BwB,EAAmBC,YAAe,CAACJ,IAAc,SAAAC,GAAQ,OACpEA,EAASI,QAAO,SAACC,EAAOX,GAAR,OAAoBW,EAAQX,EAAQD,SAAQ,MAGjDa,EAAaH,YACxB,CAACF,EAAWC,IACZ,SAACxB,EAAQsB,GAAT,OAAsBtB,EAASsB,KCL3BO,E,iLACM,IAAD,EAC4BrB,KAAK5B,MAAhCS,EADD,EACCA,KAAM0B,EADP,EACOA,OAAQe,EADf,EACeA,SACtB,OACE,4BACE,4BAAKzC,GACL,4BAAK0B,GACL,4BACE,kBAAC,EAAD,CAAQpC,MAAM,SAASc,QAASqC,U,GARpBrB,aAsBPC,eAPS,SAACX,EAAOgC,GAAR,ODPM,SAAChC,EAAOkB,GAAR,OAC5BI,EAAYtB,GAAOiC,MAAK,SAAAhB,GAAO,OAAIA,EAAQC,KAAOA,KCOlDgB,CAAyBlC,EAAOgC,EAASd,OAEhB,SAACN,EAAUoB,GACpC,MAAO,CAAED,SAAU,kBAAMnB,GHVLM,EGU6Bc,EAASd,GHTnD,CACL/B,KAAMQ,EAAME,eACZgB,QAAS,CACPI,QAAS,CAAEC,UAJK,IAAAA,MGaPP,CAA6CmB,G,yQCtB5D,IAAMK,EAAQ7D,IAAO8D,MAAV,KAuCIzB,eANS,SAAAX,GACtB,MAAO,CACLuB,SAAUW,EAAsBlC,MAIrBW,EAvBO,SAAC,GAAD,QAAGY,gBAAH,MAAc,GAAd,IAAkBQ,SAAlB,OACpB,kBAACI,EAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACGZ,EAASc,KAAI,gBAAGnB,EAAH,EAAGA,GAAH,OACZ,kBAAC,EAAD,CAASoB,IAAKpB,EAAIA,GAAIA,Y,kdC/B9B,IAAMqB,EAAYjE,IAAOkE,IAAV,KAGJ,SAAA3D,GAAK,OAAKA,EAAM4D,WAAa,UAAY,aAI9C1D,EAAQT,IAAOoE,EAAV,KAQLC,EAASrE,IAAOoE,EAAV,KAaGE,EAPD,SAAC,GAAD,IAAGhE,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,MAAOqD,EAAjB,EAAiBA,WAAjB,OACZ,kBAACF,EAAD,CAAWE,WAAYA,GACrB,kBAAC,EAAD,KAAQ7D,GACR,kBAAC+D,EAAD,KAASvD,EAAT,W,2JCpBJ,IAAMmD,GAAYjE,IAAOuE,QAAV,KAsBAlC,gBARS,SAAAX,GACtB,MAAO,CACLC,OAAQiC,EAAoBlC,GAC5BuB,SAAUW,EAA2BlC,GACrC8C,QAASZ,EAAqBlC,MAInBW,EAhBA,SAAC,GAAD,IAAGV,EAAH,EAAGA,OAAQsB,EAAX,EAAWA,SAAUuB,EAArB,EAAqBA,QAArB,OACb,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAOlE,MAAM,SAASQ,MAAOa,EAAQwC,YAAU,IAC/C,kBAAC,EAAD,CAAO7D,MAAM,WAAWQ,MAAOmC,IAC/B,kBAAC,EAAD,CAAO3C,MAAM,UAAUQ,MAAO0D,EAASL,WAAYK,GAAW,Q,gSCVlE,IAAMP,GAAYjE,IAAOkE,IAAV,MAYMO,G,iLAEjB,OASE,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAfyBrC,a,0BCOlBsC,gBAAgB,CAC7BzB,SAxBsB,WAAoC,IAAnCvB,EAAkC,uDAA1B,GAA0B,yCAApBb,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QAC3C,OAAQ1B,GACN,KAAKQ,EAAMC,YACT,MAAM,GAAN,oBAAWI,GAAX,CAAkBa,EAAQI,UAE5B,KAAKtB,EAAME,eACT,OAAOG,EAAMiD,QAAO,SAAAhC,GAAO,OAAIA,EAAQC,KAAOL,EAAQI,QAAQC,MAEhE,QACE,OAAOlB,IAgBXC,OAZoB,WAAmC,IAAlCD,EAAiC,uDAAzB,EAAyB,yCAApBb,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QACxC,OAAQ1B,GACN,KAAKQ,EAAMG,YACT,OAAOe,EAAQzB,MAEjB,QACE,OAAOY,MCdEkD,GALDC,aACZC,GACAC,OAAOC,8BAAgCD,OAAOC,gCCGhDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.bab47c37.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = ' text',\r\n  value = '',\r\n  onChange = () => null,\r\n  name = '',\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nexport default Button;\r\n","const types = {\r\n  ADD_EXPENSE: 'ADD_EXPENSE',\r\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\r\n  SAVE_BUDGET: 'SAVE_BUDGET',\r\n};\r\n\r\nexport default types;\r\n","import React, { Component } from 'react';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nimport * as actions from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass BudgetForm extends Component {\r\n  state = {\r\n    budget: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSave(this.state.budget);\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input\r\n            type=\"number\"\r\n            value={this.state.budget}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSave: value => dispatch(actions.saveBudget(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);\r\n","import types from './types';\r\nimport shortid from 'shortid';\r\n\r\nexport const add = ({ name, amount }) => {\r\n  return {\r\n    type: types.ADD_EXPENSE,\r\n    payload: {\r\n      expense: {\r\n        id: shortid.generate(),\r\n        name,\r\n        amount: Number(amount),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const remove = id => {\r\n  return {\r\n    type: types.REMOVE_EXPENSE,\r\n    payload: {\r\n      expense: { id },\r\n    },\r\n  };\r\n};\r\n\r\nexport const saveBudget = value => {\r\n  return {\r\n    type: types.SAVE_BUDGET,\r\n    payload: { value: +value },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\n\r\nimport * as actions from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass ExpenseForm extends Component {\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSave({ ...this.state });\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={this.state.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSave: ({ name, amount }) => dispatch(actions.add({ name, amount })),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getExpenses = state => state.expenses;\r\n\r\nexport const getBudget = state => state.budget;\r\n\r\nexport const getTotalExpenses = createSelector([getExpenses], expenses =>\r\n  expenses.reduce((total, expense) => total + expense.amount, 0),\r\n);\r\n\r\nexport const getBalance = createSelector(\r\n  [getBudget, getTotalExpenses],\r\n  (budget, expenses) => budget - expenses,\r\n);\r\n\r\nexport const getExpenseById = (state, id) =>\r\n  getExpenses(state).find(expense => expense.id === id);\r\n","import React, { Component } from 'react';\r\nimport Button from './shared/Button';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from '../redux/selectors';\r\nimport * as actions from '../redux/actions';\r\n\r\nclass Expense extends Component {\r\n  render() {\r\n    const { name, amount, onRemove } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{name}</td>\r\n        <td>{amount}</td>\r\n        <td>\r\n          <Button label=\"Delete\" onClick={onRemove} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>\r\n  selectors.getExpenseById(state, ownProps.id);\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return { onRemove: () => dispatch(actions.remove(ownProps.id)) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Expense);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Expense from './Expense';\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from '../redux/selectors';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses = [], onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {expenses.map(({ id }) => (\r\n        <Expense key={id} id={id} />\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expenses: selectors.getExpenses(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExpensesTable);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nexport default Value;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Value from './Value';\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as selectors from '../redux/selectors';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget, expenses, balance }) => (\r\n  <Container>\r\n    <Value label=\"Budget\" value={budget} isPositive />\r\n    <Value label=\"Expenses\" value={expenses} />\r\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    budget: selectors.getBudget(state),\r\n    expenses: selectors.getTotalExpenses(state),\r\n    balance: selectors.getBalance(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport BudgetForm from './BudgetForm';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport ExpensesTable from './ExpensesTable';\r\nimport Values from './Values';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      // <Container>\r\n      //   <BudgetForm onSave={this.saveBudget} />\r\n      //   <Values budget={budget} expenses={totalExpenses} balance={balance} />\r\n      //   <ExpenseForm onSave={this.addExpense} />\r\n      //   {expenses.length > 0 && (\r\n      //     <ExpensesTable items={expenses} onRemove={this.removeExpense} />\r\n      //   )}\r\n      // </Container>\r\n      <Container>\r\n        <BudgetForm />\r\n        <Values />\r\n        <ExpenseForm />\r\n        <ExpensesTable />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import types from './types';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst expensesReducer = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_EXPENSE:\r\n      return [...state, payload.expense];\r\n\r\n    case types.REMOVE_EXPENSE:\r\n      return state.filter(expense => expense.id !== payload.expense.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst budgetReducer = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case types.SAVE_BUDGET:\r\n      return payload.value;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  expenses: expensesReducer,\r\n  budget: budgetReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}